plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
    id 'com.google.protobuf' version '0.9.3' 
}

group = 'com.example'
version = '1.0-SNAPSHOT'

repositories {
	mavenCentral()
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {
	implementation 'io.grpc:grpc-netty:1.57.2'
    implementation 'io.grpc:grpc-protobuf:1.57.2'
    implementation 'io.grpc:grpc-stub:1.57.2'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
	implementation 'com.google.protobuf:protobuf-java:3.23.4'
    implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'io.micrometer:micrometer-registry-new-relic'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}


protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.23.4" // Specify protoc version
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.69.0" // Specify gRPC plugin
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                grpc {}
            }
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

jar {
    enabled = true
    archiveBaseName.set('FlightFlex')
    archiveVersion.set('1.0.0')
}